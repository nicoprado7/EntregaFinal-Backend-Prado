<!-- views/productDetail.handlebars -->
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Detalles del Producto</title>
    <link rel="stylesheet" href="/css/styles.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body>
    <h1>Detalles del Producto</h1>
    <div id="product-detail">
        <h2>{{product.title}}</h2>
        <img src="{{product.image}}" alt="{{product.title}}" class="product-image large-image">
        <p><strong>Descripción:</strong> {{product.description}}</p>
        <p><strong>Precio:</strong> ${{product.price}}</p>
        <p><strong>Código:</strong> {{product.code}}</p>
        <p><strong>Stock:</strong> {{product.stock}}</p>
        <p><strong>Categoría:</strong> {{product.category}}</p>
        <div class="product-buttons">
            <div class="quantity-control">
                <button class="decrement-button" onclick="decrementarCantidad('{{product._id}}')">-</button>
                <span class="space" id="quantity-{{product._id}}">1</span>
                <button class="increment-button" onclick="incrementarCantidad('{{product._id}}', {{product.stock}})">+</button>
            </div>
            <button class="green-button" onclick="agregarAlCarrito('{{product._id}}', '{{product.title}}', '{{product.price}}')">Agregar al carrito</button>
        </div>
    </div>
    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();

        // Función para agregar un producto al carrito
        function agregarAlCarrito(productId, title, price) {
            const quantityElement = document.getElementById(`quantity-${productId}`);
            const quantity = parseInt(quantityElement.textContent);

            fetch(`/cart/add/${productId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ quantity })
            })
            .then(response => {
                if (response.ok) {
                    console.log('Producto agregado al carrito');
                    Swal.fire({
                        title: 'Producto Agregado',
                        text: `Has agregado ${quantity} unidades de ${title} al carrito.`,
                        icon: 'success',
                        confirmButtonText: 'OK'
                    });
                    socket.emit('updateCart');
                }
            })
            .catch(error => {
                console.error('Error al agregar el producto al carrito:', error);
            });
        }

        // Funciones para incrementar y decrementar la cantidad de productos
        function incrementarCantidad(productId, maxStock) {
            const quantityElement = document.getElementById(`quantity-${productId}`);
            let quantity = parseInt(quantityElement.textContent);
            if (quantity < maxStock) {
                quantityElement.textContent = ++quantity;
            }
        }

        function decrementarCantidad(productId) {
            const quantityElement = document.getElementById(`quantity-${productId}`);
            let quantity = parseInt(quantityElement.textContent);
            if (quantity > 1) {
                quantityElement.textContent = --quantity;
            }
        }
    </script>
</body>
</html>
